{"name":"buyue","url":"https://shushubuyue.com/","showName":"不约插件","appid":"com.buyue.app","icon":"","iconRound":true,"state":true,"single":true,"injectJq":true,"tauriApi":false,"devbug":false,"version":"0.0.1","preview":"Android","platform":["1-1"],"width":412,"height":915,"desc":"","jsFile":[],"filterCss":"","customJs":"// ==UserScript==\n// @name                      叔叔不约只配女并自动问好\n// @namespace                 wwbnq\n// @version                   0.9\n// @description               叔叔不约只配女 并自动问好，带悬浮窗控制\n// @author                    WWBNQ\n// @match                     *://*.shushubuyue.net/*\n// @match                     *://*.shushubuyue.com/*\n// @icon                      https://www.google.com/s2/favicons?sz=64&domain=shushubuyue.net\n// @license                   MIT\n// @website                   https://soujiaoben.org/#/s?id=483290&host=greasyfork\n// @grant                     none\n// ==/UserScript==\n\n(function () {\n    'use strict';\n\n    // ************在这里定义问候语*************\n    let GREETING = \"滴个打视频的妹妹\";\n    let isScriptActive = true; // 脚本是否激活\n    let checkInterval; // 检查间隔\n\n    // 创建悬浮窗按钮\n    function createFloatingButton() {\n        // 创建悬浮按钮元素\n        const floatingBtn = document.createElement('div');\n        floatingBtn.id = 'floatingBtn';\n        floatingBtn.style.position = 'fixed';\n        floatingBtn.style.bottom = '30px';\n        floatingBtn.style.right = '30px';\n        floatingBtn.style.width = '60px';\n        floatingBtn.style.height = '60px';\n        floatingBtn.style.background = isScriptActive ? 'linear-gradient(135deg, #ff416c, #ff4b2b)' : 'linear-gradient(135deg, #1a2980, #26d0ce)';\n        floatingBtn.style.color = 'white';\n        floatingBtn.style.borderRadius = '50%';\n        floatingBtn.style.display = 'flex';\n        floatingBtn.style.justifyContent = 'center';\n        floatingBtn.style.alignItems = 'center';\n        floatingBtn.style.fontSize = '24px';\n        floatingBtn.style.boxShadow = '0 4px 15px rgba(0, 0, 0, 0.3)';\n        floatingBtn.style.cursor = 'pointer';\n        floatingBtn.style.userSelect = 'none';\n        floatingBtn.style.zIndex = '2147483647'; // 设置为最大z-index值\n        floatingBtn.style.transition = 'all 0.3s ease';\n        \n        // 创建图标元素\n        const btnIcon = document.createElement('i');\n        btnIcon.id = 'btnIcon';\n        btnIcon.className = isScriptActive ? 'fas fa-stop' : 'fas fa-power-off';\n        \n        // 添加图标到按钮\n        floatingBtn.appendChild(btnIcon);\n        \n        // 添加到文档\n        document.body.appendChild(floatingBtn);\n        \n        // 创建配置模态框\n        createConfigModal();\n        \n        // 加载Font Awesome图标库\n        loadFontAwesome();\n        \n        // 初始化按钮功能\n        initButtonFunctionality(floatingBtn, btnIcon);\n    }\n\n    // 创建配置模态框\n    function createConfigModal() {\n        // 创建模态框容器\n        const configModal = document.createElement('div');\n        configModal.id = 'configModal';\n        configModal.style.display = 'none';\n        configModal.style.position = 'fixed';\n        configModal.style.top = '0';\n        configModal.style.left = '0';\n        configModal.style.width = '100%';\n        configModal.style.height = '100%';\n        configModal.style.background = 'rgba(0, 0, 0, 0.7)';\n        configModal.style.zIndex = '2147483646'; // 比按钮稍低\n        configModal.style.overflowY = 'auto';\n        \n        // 创建配置容器\n        const configContainer = document.createElement('div');\n        configContainer.className = 'config-container';\n        configContainer.style.background = 'white';\n        configContainer.style.borderRadius = '15px';\n        configContainer.style.boxShadow = '0 10px 30px rgba(0, 0, 0, 0.2)';\n        configContainer.style.width = '90%';\n        configContainer.style.maxWidth = '500px';\n        configContainer.style.margin = '30px auto';\n        configContainer.style.overflow = 'hidden';\n        \n        // 创建配置头部\n        const configHeader = document.createElement('div');\n        configHeader.className = 'config-header';\n        configHeader.style.background = 'linear-gradient(135deg, #1a2980, #26d0ce)';\n        configHeader.style.color = 'white';\n        configHeader.style.padding = '20px';\n        configHeader.style.textAlign = 'center';\n        \n        const configTitle = document.createElement('h2');\n        configTitle.textContent = '主要配置';\n        configHeader.appendChild(configTitle);\n        \n        // 创建关闭按钮\n        const closeBtn = document.createElement('div');\n        closeBtn.id = 'closeBtn';\n        closeBtn.className = 'close-btn';\n        closeBtn.innerHTML = '&times;';\n        closeBtn.style.position = 'absolute';\n        closeBtn.style.top = '15px';\n        closeBtn.style.right = '15px';\n        closeBtn.style.color = 'white';\n        closeBtn.style.fontSize = '24px';\n        closeBtn.style.cursor = 'pointer';\n        closeBtn.style.zIndex = '2147483647'; // 确保关闭按钮在最顶层\n        \n        configHeader.appendChild(closeBtn);\n        \n        // 创建配置主体\n        const configBody = document.createElement('div');\n        configBody.className = 'config-body';\n        configBody.style.padding = '20px';\n        \n        // 创建表单组\n        function createFormGroup(labelText, inputId, inputType, inputValue, placeholder) {\n            const formGroup = document.createElement('div');\n            formGroup.className = 'form-group';\n            formGroup.style.marginBottom = '20px';\n            \n            const label = document.createElement('label');\n            label.textContent = labelText;\n            label.style.display = 'block';\n            label.style.marginBottom = '8px';\n            label.style.color = '#2c3e50';\n            label.style.fontWeight = '500';\n            \n            let input;\n            if (inputType === 'select') {\n                input = document.createElement('select');\n                const option1 = document.createElement('option');\n                option1.value = 'old';\n                option1.textContent = '旧版';\n                \n                const option2 = document.createElement('option');\n                option2.value = 'new';\n                option2.textContent = '新版';\n                \n                const option3 = document.createElement('option');\n                option3.value = 'beta';\n                option3.textContent = '测试版';\n                \n                input.appendChild(option1);\n                input.appendChild(option2);\n                input.appendChild(option3);\n            } else {\n                input = document.createElement('input');\n                input.type = inputType;\n            }\n            \n            input.id = inputId;\n            input.className = 'form-control';\n            input.style.width = '100%';\n            input.style.padding = '12px';\n            input.style.border = '2px solid #e0e7ff';\n            input.style.borderRadius = '8px';\n            input.style.fontSize = '16px';\n            \n            if (inputValue) input.value = inputValue;\n            if (placeholder) input.placeholder = placeholder;\n            \n            formGroup.appendChild(label);\n            formGroup.appendChild(input);\n            \n            return formGroup;\n        }\n        \n        // 添加表单组\n        configBody.appendChild(createFormGroup('问候语', 'greeting', 'text', GREETING, '请输入问候语'));\n        \n        // 创建保存按钮\n        const saveBtn = document.createElement('button');\n        saveBtn.id = 'saveConfigBtn';\n        saveBtn.className = 'btn';\n        saveBtn.style.display = 'block';\n        saveBtn.style.width = '100%';\n        saveBtn.style.padding = '14px';\n        saveBtn.style.background = 'linear-gradient(to right, #3498db, #2980b9)';\n        saveBtn.style.color = 'white';\n        saveBtn.style.border = 'none';\n        saveBtn.style.borderRadius = '8px';\n        saveBtn.style.fontSize = '16px';\n        saveBtn.style.fontWeight = '600';\n        saveBtn.style.cursor = 'pointer';\n        saveBtn.style.marginTop = '20px';\n        \n        const saveIcon = document.createElement('i');\n        saveIcon.className = 'fas fa-save';\n        saveBtn.appendChild(saveIcon);\n        saveBtn.appendChild(document.createTextNode(' 保存配置'));\n        \n        configBody.appendChild(saveBtn);\n        \n        // 组装配置容器\n        configContainer.appendChild(configHeader);\n        configContainer.appendChild(configBody);\n        \n        // 组装模态框\n        configModal.appendChild(configContainer);\n        \n        // 添加到文档\n        document.body.appendChild(configModal);\n    }\n\n    // 加载Font Awesome图标库\n    function loadFontAwesome() {\n        const link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';\n        document.head.appendChild(link);\n    }\n\n    // 初始化按钮功能\n    function initButtonFunctionality(floatingBtn, btnIcon) {\n        let longPressTimer = null;\n        const longPressDuration = 1000; // 长按1秒触发\n        \n        // 点击事件 - 开始/停止\n        floatingBtn.addEventListener('click', function() {\n            isScriptActive = !isScriptActive;\n            \n            if (isScriptActive) {\n                // 开始\n                floatingBtn.style.background = 'linear-gradient(135deg, #ff416c, #ff4b2b)';\n                btnIcon.className = 'fas fa-stop';\n                console.log('脚本已激活');\n                startChecking();\n            } else {\n                // 停止\n                floatingBtn.style.background = 'linear-gradient(135deg, #1a2980, #26d0ce)';\n                btnIcon.className = 'fas fa-power-off';\n                console.log('脚本已停用');\n                stopChecking();\n            }\n        });\n        \n        // 长按事件 - 打开配置\n        floatingBtn.addEventListener('mousedown', function() {\n            longPressTimer = setTimeout(function() {\n                document.getElementById('configModal').style.display = 'block';\n                console.log('长按触发，打开配置');\n            }, longPressDuration);\n        });\n        \n        // 清除长按计时器\n        floatingBtn.addEventListener('mouseup', function() {\n            clearTimeout(longPressTimer);\n        });\n        \n        floatingBtn.addEventListener('mouseleave', function() {\n            clearTimeout(longPressTimer);\n        });\n        \n        // 触摸设备支持\n        floatingBtn.addEventListener('touchstart', function(e) {\n            e.preventDefault();\n            longPressTimer = setTimeout(function() {\n                document.getElementById('configModal').style.display = 'block';\n                console.log('长按触发，打开配置');\n            }, longPressDuration);\n        });\n        \n        floatingBtn.addEventListener('touchend', function(e) {\n            e.preventDefault();\n            clearTimeout(longPressTimer);\n        });\n        \n        // 关闭配置\n        document.getElementById('closeBtn').addEventListener('click', function() {\n            document.getElementById('configModal').style.display = 'none';\n        });\n        \n        // 保存配置\n        document.getElementById('saveConfigBtn').addEventListener('click', function() {\n            const greeting = document.getElementById('greeting').value;\n            \n            if (greeting) {\n                GREETING = greeting;\n                console.log('配置已保存:', { GREETING });\n                document.getElementById('configModal').style.display = 'none';\n                alert('配置保存成功！');\n            } else {\n                alert('问候语不能为空！');\n            }\n        });\n    }\n\n    // 当检测到新女生时，发送问候语\n    function stay() {\n        if (!isScriptActive) return;\n        \n        const msgInput = document.querySelector(\"#msgInput\");  // 输入框\n        const sendButton = document.querySelector(\"a.button-link.msg-send\");  // 发送按钮\n        const rightMessageCount = document.querySelectorAll(\".message.right\").length;  // 已发送的消息数量\n\n        // 若已经发送消息则直接返回\n        if (rightMessageCount !== 0) return;\n\n        // 如果自己已发消息数量为0，则认为是新女生\n        msgInput.value = GREETING;  // 设置问候语\n        msgInput.dispatchEvent(new Event('input'));  // 触发输入事件\n        msgInput.dispatchEvent(new Event('change'));  // 触发更改事件\n\n        // 发送消息\n        if (msgInput.value === GREETING && sendButton) sendButton.click();\n    }\n\n    // 当检测到对方是男生时，离开聊天并重新开始\n    function leave() {\n        if (!isScriptActive) return;\n        \n        const leftButton = document.querySelector(\"a.button-link.chat-control\");  // 离开按钮\n        if (leftButton) leftButton.click();\n\n        const leftSecondButton = document.querySelector(\"span.actions-modal-button.actions-modal-button-bold.color-danger\");  // 确认离开按钮\n        if (leftSecondButton) leftSecondButton.click();\n\n        const restartButton = document.querySelector(\"span.chat-control\");  // 重新开始按钮\n        if (restartButton && restartButton.innerText) {\n            if (restartButton.innerText === \"离开\") {\n                restartButton.click();\n                setTimeout(() => restartButton.click(), 500);\n            } else if (restartButton.innerText === \"重新开始\") {\n                restartButton.click();\n            } else {\n                console.error(\"error restartButton\");\n            }\n        }\n    }\n\n    // 开始检查\n    function startChecking() {\n        stopChecking(); // 先停止现有的检查\n        checkInterval = setInterval(() => {\n            const tab = document.querySelector(\"#partnerInfoText\");  // 对方信息标签\n            const tabText = tab ? tab.innerText : null;\n\n            // ***********在这里修改想匹配的性别***********\n            if (tabText && tabText.includes(\"女生\")) {\n                stay();  // 若为女生，调用 stay() 函数\n            } else if (tabText && tabText.includes(\"男生\")) {\n                leave();  // 若为男生，调用 leave() 函数\n            }\n        }, 1000);\n    }\n\n    // 停止检查\n    function stopChecking() {\n        if (checkInterval) {\n            clearInterval(checkInterval);\n            checkInterval = null;\n        }\n    }\n\n    // 初始化函数\n    function init() {\n        createFloatingButton();\n        if (isScriptActive) {\n            startChecking();\n        }\n    }\n\n    // 延迟5秒后启动脚本\n    setTimeout(init, 5000);\n})();","isHtml":false,"htmlPath":"","htmlFiles":[],"more":{"windows":{"label":"","title":"不约插件","url":"https://shushubuyue.com/","userAgent":"Mozilla/5.0 (Linux; Android 14; Pixel 6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Mobile Safari/537.36","width":412,"height":915,"theme":null,"resizable":true,"fullscreen":false,"maximized":false,"minWidth":400,"minHeight":300,"maxWidth":1920,"maxHeight":1080,"decorations":true,"transparent":false,"titleBarStyle":"Visible","visible":true,"focus":true,"closable":true,"minimizable":true,"maximizable":true,"alwaysOnTop":false,"alwaysOnBottom":false,"center":false,"skipTaskbar":false,"tabbingIdentifier":null,"parent":null,"dragDropEnabled":true,"browserExtensionsEnabled":false,"devtools":true,"contentProtected":false,"hiddenTitle":false,"incognito":false,"proxyUrl":null,"useHttpsScheme":false,"zoomHotkeysEnabled":false,"acceptFirstMouse":false,"create":false}},"phone":{"safeArea":{"top":0,"bottom":0,"left":0,"right":0},"header":{"show":false,"title":"","backgroundColor":"","color":"","fontSize":16,"fontWeight":"bold","loading":false,"toolBar":false,"toolBarBackgroundColor":"","toolBarColor":"","toolBarFontSize":16,"toolBarFontWeight":"bold"},"siderMenu":{"show":false,"width":0,"backgroundColor":"","color":"","fontSize":16,"fontWeight":"bold","title":"","titleColor":"","titleFontSize":16,"titleFontWeight":"bold"},"tabBar":{"show":false,"backgroundColor":"","color":"","activeColor":"","fontSize":16,"fontWeight":"bold","tabBarItem":[]},"webview":{"userAgent":"","javaScriptEnabled":true,"domStorageEnabled":true,"allowFileAccess":true,"loadWithOverviewMode":true,"setSupportZoom":true,"clearCache":true}},"ios":{"name":"buyue","showName":"不约插件","version":"0.0.1","webUrl":"https://shushubuyue.com/","id":"com.buyue.app.ios","icon":"./app-icon.png","desc":"Package for personal use only, please do not use for commercial purposes（打包仅限个人使用，请勿传播或商业用途）","pubBody":"Package for personal use only, please do not use for commercial purposes（打包仅限个人使用，请勿传播或商业用途）","isHtml":false,"debug":false},"android":{"name":"buyue","showName":"不约插件","version":"0.0.1","webUrl":"https://shushubuyue.com/","id":"com.buyue.app.android","icon":"./app-icon.png","input":"./app-icon.png","output":"./res","rounded":true,"copyTo":"./app/src/main/res","androidResDir":"./app/src/main/res","desc":"Package for personal use only, please do not use for commercial purposes（打包仅限个人使用，请勿传播或商业用途）","pubBody":"Package for personal use only, please do not use for commercial purposes（打包仅限个人使用，请勿传播或商业用途）","isHtml":false,"debug":false},"desktop":{"name":"buyue","showName":"不约插件","version":"0.0.1","id":"com.buyue.app.desktop","desc":"Package for personal use only, please do not use for commercial purposes（打包仅限个人使用，请勿传播或商业用途，否则后果自负）","webUrl":"https://shushubuyue.com/","iconPath":"../app-icon.png","inputPath":"../app-icon.png","tempPath":"./processed-image.png","icnsPath":"../src-tauri/icons/icon.icns","pubBody":"Package for personal use only, please do not use for commercial purposes（打包仅限个人使用，请勿传播或商业用途，否则后果自负）","isHtml":false,"single":true,"state":true,"injectJq":false,"tauriApi":false,"buildMethod":"local","debug":false}}